// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`SmartCGenerator should generate SmartC code 1`] = `
"#program name TestContract
#program description A test contract
#program activationAmount 1000000
#pragma maxAuxVars 3
#pragma verboseAssembly true
#pragma optimizationLevel 3
#pragma version 2.3.0
#pragma codeStackPages 0
#pragma userStackPages 0

// Magic codes for methods
#define TESTMETHOD 100
#define TESTMETHOD2 101

// Maps
#define MAP_TESTMAP_KEY1 1


// State variables
long owner;


// Structs
struct STATS {
        long counter;
        long balance;
    } stats;


void main() {
    while ((currentTx.txId = getNextTx()) != 0) {
        currentTx.sender = getSender(currentTx.txId);
        readMessage(currentTx.txId, 0, currentTx.message);

        switch(currentTx.message[0]) {
                    case TESTMETHOD:
                testMethod(currentTx.message[1], currentTx.message[2]);
                break;
                    case TESTMETHOD2:
                testMethod2(currentTx.message[1]);
                break;
                }
    }
}



// Function stubs
void testMethod(long param1, long param2) {
    // TODO: Implement testMethod
}
void testMethod2(long param1) {
    // TODO: Implement testMethod2
}
"
`;
